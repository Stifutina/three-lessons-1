{"version":3,"file":"lesson10-BtPYmH3T.js","sources":["../../node_modules/three/examples/jsm/helpers/RectAreaLightHelper.js","../../src/scripts/lesson10.js"],"sourcesContent":["import {\n\tBackSide,\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tLine,\n\tLineBasicMaterial,\n\tMesh,\n\tMeshBasicMaterial\n} from 'three';\n\n/**\n *  This helper must be added as a child of the light\n */\n\nclass RectAreaLightHelper extends Line {\n\n\tconstructor( light, color ) {\n\n\t\tconst positions = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tconst material = new LineBasicMaterial( { fog: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\t\tthis.color = color; // optional hardwired color for the helper\n\t\tthis.type = 'RectAreaLightHelper';\n\n\t\t//\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { side: BackSide, fog: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld() {\n\n\t\tthis.scale.set( 0.5 * this.light.width, 0.5 * this.light.height, 1 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\t\t\tthis.children[ 0 ].material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\t\t// prevent hue shift\n\t\t\tconst c = this.material.color;\n\t\t\tconst max = Math.max( c.r, c.g, c.b );\n\t\t\tif ( max > 1 ) c.multiplyScalar( 1 / max );\n\n\t\t\tthis.children[ 0 ].material.color.copy( this.material.color );\n\n\t\t}\n\n\t\t// ignore world scale on light\n\t\tthis.matrixWorld.extractRotation( this.light.matrixWorld ).scale( this.scale ).copyPosition( this.light.matrixWorld );\n\n\t\tthis.children[ 0 ].matrixWorld.copy( this.matrixWorld );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nexport { RectAreaLightHelper };\n","import * as THREE from 'three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\nimport GUI from 'lil-gui'\nimport { RectAreaLightHelper } from 'three/examples/jsm/Addons.js'\n\n/**\n * Base\n */\n// Debug\nconst gui = new GUI()\n\n// Canvas\nconst canvas = document.querySelector('canvas.webgl')\n\n// Scene\nconst scene = new THREE.Scene()\n\n/**\n * Lights\n */\n\n/** Ambient Light\n * Reflection of light off of surfaces\n * comes from all directions, NO SHADOWS\n */\nconst ambientLight = new THREE.AmbientLight(0xffffff, 1); // comes from all directions, NO SHADOWS\n\nscene.add(ambientLight);\ngui.add(ambientLight, 'intensity').min(0).max(3).step(0.001).name('Ambient Light Intensity');\n\n/** Directional Light\n * Light that comes from a specific direction\n * by default, it comes from the top-left corner\n */\nconst directionalLight = new THREE.DirectionalLight(0x00fffc, 1);\n\ndirectionalLight.position.set(1, 0.25, 0);\nscene.add(directionalLight);\ngui.add(directionalLight, 'intensity').min(0).max(3).step(0.001).name('Directional Light Intensity');\n\n\n/** Hemisphere Light\n * Gradient light between two colors\n * comes from every direction like ambient light\n */\nconst hemisphereLight = new THREE.HemisphereLight(0xf00000, 0x0f00ff, 1);\n\ngui.add(hemisphereLight, 'intensity').min(0).max(3).step(0.001).name('Hemisphere Light Intensity');\nscene.add(hemisphereLight);\n\n/** Point Light\n * Light that comes from a specific point\n * ...like a light bulb\n * \n * Distance: how far the light will go\n * Decay: how fast the light will decay; Sharpness of the light\n */\nconst pointLight = new THREE.PointLight(0xff9000, 2, 10, 2);\n\npointLight.position.set(0, 0.5, 1);\ngui.add(pointLight, 'intensity').min(0).max(3).step(0.001).name('Point Light Intensity');\ngui.add(pointLight, 'distance').min(0).max(10).step(0.01).name('Point Light Distance');\ngui.add(pointLight, 'decay').min(0).max(10).step(0.01).name('Point Light Decay');\nscene.add(pointLight);\n\n\n/** RectArea Light \n * Light that comes from a specific rectangle\n * works only with MeshStandardMaterial and MeshPhysicalMaterial\n */\nconst rectAreaLight = new THREE.RectAreaLight(0x4e00ff, 6, 1, 1);\n\ngui.add(rectAreaLight, 'intensity').min(0).max(10).step(0.001).name('RectArea Light Intensity');\nscene.add(rectAreaLight);\n\n/**\n * To position the RectArea Light in the scene\n * we need to set it lookAt() a point\n */\nrectAreaLight.position.set(-1.5, 0, 1.5); // first set the position\nrectAreaLight.lookAt(new THREE.Vector3()); // then set the lookAt() point\n\n/** Spot Light\n * Light that comes from a specific direction\n * angle - the width of the light beam\n * penumbra - the softness of the light beam\n * decay - how fast the light will decay; Sharpness of the light\n * ...like a flashlight */\nconst spotLight = new THREE.SpotLight(0x78ff00, 4.5, 6, Math.PI * 0.1, 0.25, 1);\n\nspotLight.position.set(0, 2, 3);\nscene.add(spotLight);\n\n// spot light target is object that the light is looking at, but it's not present at the scene\n// so we need to add it to the scene if we want to handle and make it work\nscene.add(spotLight.target);\nspotLight.target.position.x = -1.5;\n\ngui.add(spotLight, 'intensity').min(0).max(10).step(0.001).name('Spot Light Intensity');\n\n/**\n * Minimal perfomance cost is Hemisphere Light and Ambient Light\n * Highest perfomance cost is Spot Light and RectArea Light\n */\n\n\n/**\n * We need helpers. When you create the light, you don't see it in the scene. You can see it only when it hits the object,\n * the effect of the light on the object. So we need to create helpers to see the light in the scene.\n */\n\n\n/** Hemisphere Light Helper */\nconst hemisphereLightHelper = new THREE.HemisphereLightHelper(hemisphereLight, 0.2);\n\nscene.add(hemisphereLightHelper);\n\n/** Directional Light Helper */\nconst directionalLightHelper = new THREE.DirectionalLightHelper(directionalLight, 0.2);\n\nscene.add(directionalLightHelper);\n\n/** Point Light Helper */\nconst pointLightHelper = new THREE.PointLightHelper(pointLight, 0.2);\n\nscene.add(pointLightHelper);\n\n/** Spot Light Helper */\nconst spotLightHelper = new THREE.SpotLightHelper(spotLight);\n\nscene.add(spotLightHelper);\n\nwindow.requestAnimationFrame(() => {\n    spotLightHelper.update();\n});\n\n/** RectArea Light Helper */\nconst rectAreaLightHelper = new RectAreaLightHelper(rectAreaLight);\nscene.add(rectAreaLightHelper);\n\n\n\n\n\n/**\n * Objects\n */\n// Material\nconst material = new THREE.MeshStandardMaterial()\nmaterial.roughness = 0.4\n\n// Objects\nconst sphere = new THREE.Mesh(\n    new THREE.SphereGeometry(0.5, 32, 32),\n    material\n)\nsphere.position.x = - 1.5\n\nconst cube = new THREE.Mesh(\n    new THREE.BoxGeometry(0.75, 0.75, 0.75),\n    material\n)\n\nconst torus = new THREE.Mesh(\n    new THREE.TorusGeometry(0.3, 0.2, 32, 64),\n    material\n)\ntorus.position.x = 1.5\n\nconst plane = new THREE.Mesh(\n    new THREE.PlaneGeometry(5, 5),\n    material\n)\nplane.rotation.x = - Math.PI * 0.5\nplane.position.y = - 0.65;\nplane.material.side = THREE.DoubleSide;\n\nscene.add(sphere, cube, torus, plane);\n\n/**\n * Sizes\n */\nconst sizes = {\n    width: window.innerWidth,\n    height: window.innerHeight\n}\n\nwindow.addEventListener('resize', () =>\n{\n    // Update sizes\n    sizes.width = window.innerWidth\n    sizes.height = window.innerHeight\n\n    // Update camera\n    camera.aspect = sizes.width / sizes.height\n    camera.updateProjectionMatrix()\n\n    // Update renderer\n    renderer.setSize(sizes.width, sizes.height)\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\n})\n\n/**\n * Camera\n */\n// Base camera\nconst camera = new THREE.PerspectiveCamera(75, sizes.width / sizes.height, 0.1, 100)\ncamera.position.x = 1\ncamera.position.y = 1\ncamera.position.z = 2\nscene.add(camera)\n\n// Controls\nconst controls = new OrbitControls(camera, canvas)\ncontrols.enableDamping = true\n\n/**\n * Renderer\n */\nconst renderer = new THREE.WebGLRenderer({\n    canvas: canvas\n})\nrenderer.setSize(sizes.width, sizes.height)\nrenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\n\n/**\n * Animate\n */\nconst clock = new THREE.Clock()\n\nconst tick = () =>\n{\n    const elapsedTime = clock.getElapsedTime()\n\n    // Update objects\n    sphere.rotation.y = 0.1 * elapsedTime\n    cube.rotation.y = 0.1 * elapsedTime\n    torus.rotation.y = 0.1 * elapsedTime\n\n    sphere.rotation.x = 0.15 * elapsedTime\n    cube.rotation.x = 0.15 * elapsedTime\n    torus.rotation.x = 0.15 * elapsedTime\n\n    // Update controls\n    controls.update()\n\n    // Render\n    renderer.render(scene, camera)\n\n    // Call tick again on the next frame\n    window.requestAnimationFrame(tick)\n}\n\ntick()"],"names":["RectAreaLightHelper","Line","light","color","positions","geometry","BufferGeometry","Float32BufferAttribute","material","LineBasicMaterial","positions2","geometry2","Mesh","MeshBasicMaterial","BackSide","c","max","gui","GUI","canvas","scene","THREE.Scene","ambientLight","THREE.AmbientLight","directionalLight","THREE.DirectionalLight","hemisphereLight","THREE.HemisphereLight","pointLight","THREE.PointLight","rectAreaLight","THREE.RectAreaLight","THREE.Vector3","spotLight","THREE.SpotLight","hemisphereLightHelper","THREE.HemisphereLightHelper","directionalLightHelper","THREE.DirectionalLightHelper","pointLightHelper","THREE.PointLightHelper","spotLightHelper","THREE.SpotLightHelper","rectAreaLightHelper","THREE.MeshStandardMaterial","sphere","THREE.Mesh","THREE.SphereGeometry","cube","THREE.BoxGeometry","torus","THREE.TorusGeometry","plane","THREE.PlaneGeometry","THREE.DoubleSide","sizes","camera","renderer","THREE.PerspectiveCamera","controls","OrbitControls","THREE.WebGLRenderer","clock","THREE.Clock","tick","elapsedTime"],"mappings":"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","x_google_ignoreList":[0]}