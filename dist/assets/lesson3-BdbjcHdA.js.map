{"version":3,"file":"lesson3-BdbjcHdA.js","sources":["../../src/scripts/lesson3.js"],"sourcesContent":["import * as THREE from 'three'\nimport { OrbitControls } from 'three/examples/jsm/Addons.js';\n\n// Canvas\nconst canvas = document.querySelector('canvas.webgl')\n\n// Scene\nconst scene = new THREE.Scene()\n\n\n/**\n * Sizes\n */\nconst sizes = {\n    width: 800,\n    height: 600\n}\n\n/**\n * Cursor\n */\n\nconst cursor = {\n    x: 0,\n    y: 0\n};\n\nwindow.addEventListener('mousemove', (event) => {\n    cursor.x = event.clientX / sizes.width - 0.5;\n    cursor.y = event.clientY / sizes.height - 0.5;\n})\n\n\n/**\n * Object\n */\nconst geometry = new THREE.BoxGeometry(1, 1, 1)\nconst material = new THREE.MeshBasicMaterial({ color: 0xff0000 })\nconst mesh = new THREE.Mesh(geometry, material)\nscene.add(mesh);\n\n// mesh.position.set(1, 0.07, 0.5);\nmesh.position.normalize(); // put to 1 1 1 \n\n// mesh.scale.set(1.2, 1.1, 0.8);\n\nmesh.rotation.reorder('YXZ'); // order of setting, rotate by y then by x.\n// mesh.rotation.set(Math.PI * 0.25, Math.PI * 0.25, 0);\n// better to use quaternion because of rotation order\n\n\n/**\n * Camera\n * fov is a vertival angle of view, should be between 45 and 75.\n * \n */\n\nconst camera = new THREE.PerspectiveCamera(75, sizes.width / sizes.height, 0.1, 100);\n// const aspectRatio = sizes.width / sizes.height;\n// const camera = new THREE.OrthographicCamera(-1 * aspectRatio, 1 * aspectRatio, 1, -1, 0.1, 100); // if size of orthographic camera is square, the renderer size should be also square\n// far value should not be very far, because there will be glitches bugs because of z fighting\ncamera.position.z = 2;\n\nscene.add(camera);\n\n/**\n * Controls\n */\nconst controls = new OrbitControls(camera, canvas);\ncontrols.enableDamping = true;\n\n// controls.target.y = 2;\n// controls.update();\n\n\n/**\n * Renderer\n */\nconst renderer = new THREE.WebGLRenderer({\n    canvas: canvas\n})\nrenderer.setSize(sizes.width, sizes.height)\n\n\n\n/**\n * Animations\n * tick - a function which will be called on every next free frame \n * V1 with delta time\n */\n// let prevTime = Date.now();\n\nconst tick = () => {\n    // problem: the higher frame rate - the faster animation\n    // solution - check time\n\n    // const currentTime = Date.now();\n    // const deltaTime = currentTime - prevTime;\n    // prevTime = currentTime;\n    // mesh.rotation.y += 0.001 * deltaTime;\n\n\n\n    // Control camera by cursor:\n    // !! Controls is about the controlling and update camera by user actions\n\n    //move camera by cursor:\n    // camera.position.x = cursor.x * 10; // to follow camera by the cursor posiiton\n    // camera.position.y = cursor.y * -10;\n    \n    // camera.position.x = Math.sin(cursor.x * Math.PI * 2) * 3; // to turn camera horizontally around the scene with cursor position (x and z is horizontal plane)\n    // camera.position.z = Math.cos(cursor.x * Math.PI * 2) * 3;\n    // camera.position.y = cursor.y;\n    // camera.lookAt(mesh.position);\n\n\n    // Update controls to apply damping acceleration effect\n    controls.update();\n\n    // take a picture\n    renderer.render(scene, camera);\n    window.requestAnimationFrame(tick);\n}\n\ntick();\n"],"names":["canvas","scene","THREE.Scene","sizes","event","geometry","THREE.BoxGeometry","material","THREE.MeshBasicMaterial","mesh","THREE.Mesh","camera","THREE.PerspectiveCamera","controls","OrbitControls","renderer","THREE.WebGLRenderer","tick"],"mappings":"8JAIA,MAAMA,EAAS,SAAS,cAAc,cAAc,EAG9CC,EAAQ,IAAIC,EAMZC,EAAQ,CACV,MAAO,IACP,OAAQ,GACZ,EAWA,OAAO,iBAAiB,YAAcC,GAAU,CACjCA,EAAM,QAAUD,EAAM,MAAQ,GAC9BC,EAAM,QAAUD,EAAM,OAAS,EAC9C,CAAC,EAMD,MAAME,EAAW,IAAIC,EAAkB,EAAG,EAAG,CAAC,EACxCC,EAAW,IAAIC,EAAwB,CAAE,MAAO,QAAU,CAAA,EAC1DC,EAAO,IAAIC,EAAWL,EAAUE,CAAQ,EAC9CN,EAAM,IAAIQ,CAAI,EAGdA,EAAK,SAAS,YAIdA,EAAK,SAAS,QAAQ,KAAK,EAW3B,MAAME,EAAS,IAAIC,EAAwB,GAAIT,EAAM,MAAQA,EAAM,OAAQ,GAAK,GAAG,EAInFQ,EAAO,SAAS,EAAI,EAEpBV,EAAM,IAAIU,CAAM,EAKhB,MAAME,EAAW,IAAIC,EAAcH,EAAQX,CAAM,EACjDa,EAAS,cAAgB,GASzB,MAAME,EAAW,IAAIC,EAAoB,CACrC,OAAQhB,CACZ,CAAC,EACDe,EAAS,QAAQZ,EAAM,MAAOA,EAAM,MAAM,EAW1C,MAAMc,EAAO,IAAM,CAyBfJ,EAAS,OAAQ,EAGjBE,EAAS,OAAOd,EAAOU,CAAM,EAC7B,OAAO,sBAAsBM,CAAI,CACrC,EAEAA,EAAM"}