import{I as v,c as H,J as P,K as G,M as d,a as D,O as k,S as z,t as q,Q as C,R as F,u as O,U as T,V as E,X as U,Y as V,Z as j,_ as J,$ as K,o as Q,q as X,B as Y,r as Z,a0 as _,h as $,P as N,W as tt,v as et}from"./three.module-anhs7Ygx.js";/* empty css              */import{O as it}from"./OrbitControls-DvCuvUga.js";import{G as nt}from"./lil-gui.esm-hsJpI9MV.js";class st extends v{constructor(o,m){const I=[1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],y=new H;y.setAttribute("position",new P(I,3)),y.computeBoundingSphere();const W=new G({fog:!1});super(y,W),this.light=o,this.color=m,this.type="RectAreaLightHelper";const B=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],L=new H;L.setAttribute("position",new P(B,3)),L.computeBoundingSphere(),this.add(new d(L,new D({side:k,fog:!1})))}updateMatrixWorld(){if(this.scale.set(.5*this.light.width,.5*this.light.height,1),this.color!==void 0)this.material.color.set(this.color),this.children[0].material.color.set(this.color);else{this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);const o=this.material.color,m=Math.max(o.r,o.g,o.b);m>1&&o.multiplyScalar(1/m),this.children[0].material.color.copy(this.material.color)}this.matrixWorld.extractRotation(this.light.matrixWorld).scale(this.scale).copyPosition(this.light.matrixWorld),this.children[0].matrixWorld.copy(this.matrixWorld)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const n=new nt,S=document.querySelector("canvas.webgl"),t=new z,A=new q(16777215,1);t.add(A);n.add(A,"intensity").min(0).max(3).step(.001).name("Ambient Light Intensity");const w=new C(65532,1);w.position.set(1,.25,0);t.add(w);n.add(w,"intensity").min(0).max(3).step(.001).name("Directional Light Intensity");const u=new F(15728640,983295,1);n.add(u,"intensity").min(0).max(3).step(.001).name("Hemisphere Light Intensity");t.add(u);const a=new O(16748544,2,10,2);a.position.set(0,.5,1);n.add(a,"intensity").min(0).max(3).step(.001).name("Point Light Intensity");n.add(a,"distance").min(0).max(10).step(.01).name("Point Light Distance");n.add(a,"decay").min(0).max(10).step(.01).name("Point Light Decay");t.add(a);const c=new T(5112063,6,1,1);n.add(c,"intensity").min(0).max(10).step(.001).name("RectArea Light Intensity");t.add(c);c.position.set(-1.5,0,1.5);c.lookAt(new E);const r=new U(7929600,4.5,6,Math.PI*.1,.25,1);r.position.set(0,2,3);t.add(r);t.add(r.target);r.target.position.x=-1.5;n.add(r,"intensity").min(0).max(10).step(.001).name("Spot Light Intensity");const ot=new V(u,.2);t.add(ot);const at=new j(w,.2);t.add(at);const rt=new J(a,.2);t.add(rt);const M=new K(r);t.add(M);window.requestAnimationFrame(()=>{M.update()});const ht=new st(c);t.add(ht);const l=new Q;l.roughness=.4;const p=new d(new X(.5,32,32),l);p.position.x=-1.5;const f=new d(new Y(.75,.75,.75),l),g=new d(new Z(.3,.2,32,64),l);g.position.x=1.5;const x=new d(new _(5,5),l);x.rotation.x=-Math.PI*.5;x.position.y=-.65;x.material.side=$;t.add(p,f,g,x);const e={width:window.innerWidth,height:window.innerHeight};window.addEventListener("resize",()=>{e.width=window.innerWidth,e.height=window.innerHeight,i.aspect=e.width/e.height,i.updateProjectionMatrix(),h.setSize(e.width,e.height),h.setPixelRatio(Math.min(window.devicePixelRatio,2))});const i=new N(75,e.width/e.height,.1,100);i.position.x=1;i.position.y=1;i.position.z=2;t.add(i);const b=new it(i,S);b.enableDamping=!0;const h=new tt({canvas:S});h.setSize(e.width,e.height);h.setPixelRatio(Math.min(window.devicePixelRatio,2));const dt=new et,R=()=>{const s=dt.getElapsedTime();p.rotation.y=.1*s,f.rotation.y=.1*s,g.rotation.y=.1*s,p.rotation.x=.15*s,f.rotation.x=.15*s,g.rotation.x=.15*s,b.update(),h.render(t,i),window.requestAnimationFrame(R)};R();
//# sourceMappingURL=lesson10-D9BrN0cp.js.map
