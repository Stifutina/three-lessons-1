{"version":3,"file":"lesson5-Ck81VMAZ.js","sources":["../../src/scripts/lesson5.js"],"sourcesContent":["import * as THREE from 'three'\nimport { OrbitControls } from 'three/examples/jsm/Addons.js';\n\n// Canvas\nconst canvas = document.querySelector('canvas.webgl')\n\n// Scene\nconst scene = new THREE.Scene()\n\n\n/**\n * Cursor\n */\n\nconst cursor = {\n    x: 0,\n    y: 0\n};\n\n\n/**\n * Sizes\n */\nconst sizes = {\n    width: window.innerWidth,\n    height: window.innerHeight\n}\n\n/**\n * Object\n */\nconst geometry = new THREE.BoxGeometry(1, 1, 1, 4, 4, 4);\nconst material = new THREE.MeshBasicMaterial({ color: 0xff0000, wireframe: true });\nconst mesh = new THREE.Mesh(geometry, material);\n\nscene.add(mesh);\n\nmesh.position.y = -1;\n\n// Custom Geometry creating using BufferGeometry\nconst positionsArray = new Float32Array([\n    0, 0, 0, // First vertice\n    0, 1, 0, // Second vertice\n    1, 0, 0 // Third vertice\n]);\nconst positionsAttribute = new THREE.BufferAttribute(positionsArray, 3);\nconst customTriangleGeometry = new THREE.BufferGeometry();\nconst customTriangleMesh = new THREE.Mesh(customTriangleGeometry, material.clone());\n\ncustomTriangleGeometry.setAttribute('position', positionsAttribute); \nscene.add(customTriangleMesh);\n\ncustomTriangleMesh.material.color.setHex(0x00ff00);\ncustomTriangleMesh.position.x = -1.3;\n\n\n// New custom mesh:\nconst randomVerticesCount = 150;\nconst randomPositionsArray = new Float32Array(randomVerticesCount * 3 * 3);\n\nfor (let i = 0; i < randomVerticesCount * 3 * 3; i++) {\n    randomPositionsArray[i] = Math.random() - 0.5;\n}\n\nconst randomPostionsAtribute = new THREE.BufferAttribute(randomPositionsArray, 3);\nconst randomGeometry = new THREE.BufferGeometry();\nrandomGeometry.setAttribute('position', randomPostionsAtribute);\nconst randomMesh = new THREE.Mesh(randomGeometry, material.clone());\n\nrandomMesh.material.color.setHex(0x6600ff);\nscene.add(randomMesh);\n\n/**\n * Camera\n * fov is a vertival angle of view, should be between 45 and 75.\n * \n */\n\nconst camera = new THREE.PerspectiveCamera(60, sizes.width / sizes.height, 0.1, 100);\n\ncamera.position.z = 2;\n\nscene.add(camera);\n\n/**\n * Controls\n */\nconst controls = new OrbitControls(camera, canvas);\ncontrols.enableDamping = true;\n\n\n/**\n * Renderer\n */\nconst renderer = new THREE.WebGLRenderer({\n    canvas: canvas\n})\nrenderer.setSize(sizes.width, sizes.height)\nrenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n\n/**\n * Animations\n * tick - a function which will be called on every next free frame \n * V1 with delta time\n */\n\nconst tick = () => {\n    controls.update();\n\n    // take a picture\n    renderer.render(scene, camera);\n    window.requestAnimationFrame(tick);\n}\n\ntick();\n\n\n/**\n * Event listeners\n */\n\nwindow.addEventListener('mousemove', (event) => {\n    cursor.x = event.clientX / sizes.width - 0.5;\n    cursor.y = event.clientY / sizes.height - 0.5;\n});\n\nwindow.addEventListener('resize', () => {\n    // Update sizes\n\n    sizes.width = window.innerWidth;\n    sizes.height = window.innerHeight;\n\n    // Update camera\n\n    camera.aspect = sizes.width / sizes.height;\n    camera.updateProjectionMatrix();\n    renderer.setSize(sizes.width, sizes.height);\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n});\n\nwindow.addEventListener('dblclick', () => {\n    const fullscreenElement = document.fullscreenElement || document.webkitFullScreenelement;\n\n    if (!fullscreenElement) {\n        if (canvas.requestFullscreen) {\n            canvas.requestFullscreen();\n        } else if (canvas.webkitRequestFullscreen) {\n            canvas.webkitRequestFullscreen();\n        }\n        \n    } else {\n        if (document.exitFullscreen) {\n            document.exitFullscreen();\n        } else if (document.webkitExitFullscreen) {\n            document.webkitExitFullscreen();\n        }\n        \n    }\n})"],"names":["canvas","scene","THREE.Scene","sizes","geometry","THREE.BoxGeometry","material","THREE.MeshBasicMaterial","mesh","THREE.Mesh","positionsArray","positionsAttribute","THREE.BufferAttribute","customTriangleGeometry","THREE.BufferGeometry","customTriangleMesh","randomVerticesCount","randomPositionsArray","i","randomPostionsAtribute","randomGeometry","randomMesh","camera","THREE.PerspectiveCamera","controls","OrbitControls","renderer","THREE.WebGLRenderer","tick","event"],"mappings":"4KAIA,MAAMA,EAAS,SAAS,cAAc,cAAc,EAG9CC,EAAQ,IAAIC,EAgBZC,EAAQ,CACV,MAAO,OAAO,WACd,OAAQ,OAAO,WACnB,EAKMC,EAAW,IAAIC,EAAkB,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,EACjDC,EAAW,IAAIC,EAAwB,CAAE,MAAO,SAAU,UAAW,GAAM,EAC3EC,EAAO,IAAIC,EAAWL,EAAUE,CAAQ,EAE9CL,EAAM,IAAIO,CAAI,EAEdA,EAAK,SAAS,EAAI,GAGlB,MAAME,EAAiB,IAAI,aAAa,CACpC,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,CACV,CAAC,EACKC,EAAqB,IAAIC,EAAsBF,EAAgB,CAAC,EAChEG,EAAyB,IAAIC,EAC7BC,EAAqB,IAAIN,EAAWI,EAAwBP,EAAS,MAAK,CAAE,EAElFO,EAAuB,aAAa,WAAYF,CAAkB,EAClEV,EAAM,IAAIc,CAAkB,EAE5BA,EAAmB,SAAS,MAAM,OAAO,KAAQ,EACjDA,EAAmB,SAAS,EAAI,KAIhC,MAAMC,EAAsB,IACtBC,EAAuB,IAAI,aAAaD,EAAsB,EAAI,CAAC,EAEzE,QAASE,EAAI,EAAGA,EAAIF,EAAsB,EAAI,EAAGE,IAC7CD,EAAqBC,CAAC,EAAI,KAAK,OAAQ,EAAG,GAG9C,MAAMC,EAAyB,IAAIP,EAAsBK,EAAsB,CAAC,EAC1EG,EAAiB,IAAIN,EAC3BM,EAAe,aAAa,WAAYD,CAAsB,EAC9D,MAAME,EAAa,IAAIZ,EAAWW,EAAgBd,EAAS,MAAK,CAAE,EAElEe,EAAW,SAAS,MAAM,OAAO,OAAQ,EACzCpB,EAAM,IAAIoB,CAAU,EAQpB,MAAMC,EAAS,IAAIC,EAAwB,GAAIpB,EAAM,MAAQA,EAAM,OAAQ,GAAK,GAAG,EAEnFmB,EAAO,SAAS,EAAI,EAEpBrB,EAAM,IAAIqB,CAAM,EAKhB,MAAME,EAAW,IAAIC,EAAcH,EAAQtB,CAAM,EACjDwB,EAAS,cAAgB,GAMzB,MAAME,EAAW,IAAIC,EAAoB,CACrC,OAAQ3B,CACZ,CAAC,EACD0B,EAAS,QAAQvB,EAAM,MAAOA,EAAM,MAAM,EAC1CuB,EAAS,cAAc,KAAK,IAAI,OAAO,iBAAkB,CAAC,CAAC,EAQ3D,MAAME,EAAO,IAAM,CACfJ,EAAS,OAAQ,EAGjBE,EAAS,OAAOzB,EAAOqB,CAAM,EAC7B,OAAO,sBAAsBM,CAAI,CACrC,EAEAA,EAAM,EAON,OAAO,iBAAiB,YAAcC,GAAU,CACjCA,EAAM,QAAU1B,EAAM,MAAQ,GAC9B0B,EAAM,QAAU1B,EAAM,OAAS,EAC9C,CAAC,EAED,OAAO,iBAAiB,SAAU,IAAM,CAGpCA,EAAM,MAAQ,OAAO,WACrBA,EAAM,OAAS,OAAO,YAItBmB,EAAO,OAASnB,EAAM,MAAQA,EAAM,OACpCmB,EAAO,uBAAwB,EAC/BI,EAAS,QAAQvB,EAAM,MAAOA,EAAM,MAAM,EAC1CuB,EAAS,cAAc,KAAK,IAAI,OAAO,iBAAkB,CAAC,CAAC,CAC/D,CAAC,EAED,OAAO,iBAAiB,WAAY,IAAM,CACZ,SAAS,mBAAqB,SAAS,wBAUzD,SAAS,eACT,SAAS,eAAgB,EAClB,SAAS,sBAChB,SAAS,qBAAsB,EAV/B1B,EAAO,kBACPA,EAAO,kBAAmB,EACnBA,EAAO,yBACdA,EAAO,wBAAyB,CAW5C,CAAC"}